name: Maven with Spark
description: Combines mvn and spark
inputs:
  title:
    required: true
    description: step title
  script:
    required: true
    description: script to run for step
  jdk:
    required: false
    default: '8'
    description: swap out the jdk
  gpgKey:
    required: false
    default: ""
    description: needed for publish
  storeTarget:
    required: false
    default: ""
    description: path of the maven target on the matrix build be upload-artifact?
  additionalShellCommand:
    required: false
    default: ""
    description: run extra commands on the shell, must be a .sh file location in current directory without the extension
  sparkVersion:
    required: false
    description: Spark version to use
  scalaSparkVersion:
    required: false
    description: Spark scala version to use
  hadoopVersion:
    required: false
    description: Hadoop version to use

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4.1.2
    - uses: vemonet/setup-spark@v1.2.1 # only needed for hadoop version if / when tests are added 2.4 -> 3.5 builds work
      with:
        spark-version: ${{ inputs.sparkVersion }}
        hadoop-version: ${{ inputs.hadoopVersion }}
        scala-version: ${{ inputs.sparkScalaVersion }}
        #spark-url: 'https://dlcdn.apache.org/spark/spark-3.5.5/spark-3.5.5-bin-hadoop3.tgz'
    - name: Set up JDK ${{ inputs.jdk }}
      uses: actions/setup-java@v4.2.1
      with:
        java-version: ${{ inputs.jdk }}
        distribution: 'temurin'
        cache: maven #this caches ~/.m2/repo
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: OSSRH_USERNAME # env variable for username in deploy
        server-password: OSSRH_TOKEN # env variable for token in deploy
        gpg-private-key: ${{ inputs.gpgKey }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
    - name: ${{ inputs.title }}
      run: ${{ inputs.script }}
      shell: bash
    - name: additionalShell
      if: ${{ !startsWith(inputs.additionalShellCommand, '.sh ') && inputs.additionalShellCommand != '' }}
      run: ./${{ inputs.additionalShellCommand }}
      shell: bash
    - name: target
      uses: actions/upload-artifact@v4
      continue-on-error: true
      if: ${{ inputs.storeTarget != '' }}
      with:
        name: build_target
        path: ${{ inputs.storeTarget }}
